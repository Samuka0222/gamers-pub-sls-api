# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: samuelpersonal
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: gamers-pub-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: gamerspub-sls-api

package:
  individually: true

provider:
  name: aws
  runtime: nodejs20.x
  deploymentMethod: direct
  architecture: arm64
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminDeleteUser
            - cognito-idp:AdminUpdateUserAttributes
            - cognito-idp:AdminGetUser
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:Scan
          Resource:
            - !GetAtt GamersPubUserPool.Arn
            - !GetAtt GamersPubTable.Arn
  environment:
    COGNITO_CLIENT_ID: !Ref GamersPubUserPoolClient
    COGNITO_POOL_ID: !Ref GamersPubUserPool
  httpApi:
    authorizers:
      CognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: !GetAtt GamersPubUserPool.ProviderURL
        audience:
          - !Ref GamersPubUserPoolClient

custom:
  Esbuild:
  bundle: true
  minify: true
  sourcemap: false
  target: node20
  exclude:
    - "@aws-sdk/*"
  platform: node
  concurrency: 10

resources:
  Resources:
    GamersPubUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: GamersPubUserPool
        MfaConfiguration: OFF
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        UsernameAttributes:
          - email
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
            TemporaryPasswordValidityDays: 2
        Schema:
          - Name: nickname
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: given_name
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: family_name
            Mutable: true
            Required: true
            AttributeDataType: String
    GamersPubUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: GamersPubUserPoolClient
        UserPoolId: !Ref GamersPubUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        AccessTokenValidity: 1
        RefreshTokenValidity: 30
        TokenValidityUnits:
          AccessToken: days
          RefreshToken: days
    GamersPubTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: GamersPubTable
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S #S == String / N == Number / B == Binary
          - AttributeName: sk
            AttributeType: S
          - AttributeName: gsi1_pk
            AttributeType: S
          - AttributeName: gsi1_sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gsi1
            KeySchema:
            - AttributeName: gsi1_pk
              KeyType: HASH
            - AttributeName: gsi1_sk
              KeyType: RANGE
            Projection:
              ProjectionType: ALL


functions:
  hello:
    handler: src/functions/helloWorld.handler
    events:
      - httpApi:
          path: /
          method: GET
  signUp:
    handler: src/functions/auth/signUp.handler
    events:
      - httpApi:
          path: /auth/sign-up
          method: POST
  signIn:
    handler: src/functions/auth/signIn.handler
    events:
      - httpApi:
          path: /auth/sign-in
          method: POST
  accountConfirmation:
    handler: src/functions/auth/accountConfirmation.handler
    events:
      - httpApi:
          path: /auth/verify-account
          method: POST
    timeout: 10
  refreshToken:
    handler: src/functions/auth/refreshToken.handler
    events:
      - httpApi:
          path: /auth/refresh-token
          method: POST
  forgotPassword:
    handler: src/functions/auth/forgotPassword.handler
    events:
      - httpApi:
          path: /auth/forgot-password
          method: POST
  resetPassword:
    handler: src/functions/auth/resetPassword.handler
    events:
      - httpApi:
          path: /auth/reset-password
          method: POST
  cognitoCustomMessage:
    handler: src/functions/auth/cognitoCustomMessage.handler
    events:
      - cognitoUserPool:
          pool: GamersPubUserPool
          trigger: CustomMessage
          existing: true
          # forceDeploy: true
  storeUser:
    handler: src/functions/auth/storeUser.handler
    events:
      - cognitoUserPool:
          pool: GamersPubUserPool
          trigger: PostConfirmation
          existing: true
          # forceDeploy: true
